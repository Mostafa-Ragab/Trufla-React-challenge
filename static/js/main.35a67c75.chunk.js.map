{"version":3,"sources":["contexts/interests/interests.context.tsx","providers/users.providers.tsx","components/AccordionItem.tsx","components/Accordion.tsx","components/UserList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InterestsContext","createContext","interests","UsersContext","users","clearUserFromList","clearInterestsFromUser","UsersProvider","children","useState","Users","setUsers","Provider","value","userId","filter","usr","id","usrId","interest","map","hobby","AccordionItem","showDescription","fontWeightBold","user","index","onClick","useContext","className","aria-controls","data-qa","name","following","includes","length","int","idx","Accordion","usersList","activeIndex","setActiveIndex","renderedUsers","sort","a","b","UserList","href","target","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35a67c75.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport interests from \"./interests.json\";\r\n\r\nconst InterestsContext = createContext(interests);\r\n\r\nexport default InterestsContext;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\n// import { filterInterestFromUser } from \"./users.utils\";\r\nimport Users from \"../contexts/users.json\";\r\n\r\nexport type usersTypes = {\r\n  id: number;\r\n  name: string;\r\n  following: number[];\r\n  interests?: number[];\r\n};\r\n\r\nexport type Interests = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport interface DataTypes {\r\n  users: Array<usersTypes>;\r\n  clearUserFromList: (userId: number) => void;\r\n  clearInterestsFromUser: (userId: number, int: number) => void;\r\n}\r\n\r\nexport const UsersContext = createContext<DataTypes>({\r\n  users: [],\r\n  clearUserFromList: () => {},\r\n  clearInterestsFromUser: () => {},\r\n});\r\n\r\nconst UsersProvider: React.FC<React.ReactNode> = ({ children }) => {\r\n  const [users, setUsers] = useState<usersTypes[]>(Users);\r\n\r\n  const clearUserFromList = (userId: number) => {\r\n    return setUsers(users.filter((usr) => usr.id !== userId));\r\n  };\r\n  const clearInterestsFromUser = (usrId: number, interest: number) => {\r\n    return setUsers(\r\n      users.map((usr) =>\r\n        usr.id === usrId\r\n          ? {\r\n              ...usr,\r\n              interests: usr.interests?.filter((hobby) => hobby !== interest),\r\n            }\r\n          : usr\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <UsersContext.Provider\r\n      value={{\r\n        users,\r\n        clearUserFromList,\r\n        clearInterestsFromUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UsersProvider;\r\n","import React, { useContext } from \"react\";\nimport InterestsContext from \"../contexts/interests/interests.context\";\nimport { UsersContext } from \"../providers/users.providers\";\nimport { usersTypes } from \"../providers/users.providers\";\ntype Props = {\n  showDescription: string;\n  fontWeightBold: string;\n  user: usersTypes;\n  index: number;\n  onClick: () => void;\n};\nconst AccordionItem: React.FC<Props> = ({\n  showDescription,\n  fontWeightBold,\n  user,\n  index,\n  onClick,\n}) => {\n  const interests = useContext(InterestsContext);\n  const { clearInterestsFromUser, clearUserFromList, users } =\n    useContext(UsersContext);\n\n  return (\n    <>\n      <div className=\"users__user\" key={user.id}>\n        <dt className=\"users__user-header\">\n          <div\n            className=\"remove-button\"\n            onClick={() => clearUserFromList(user.id)}\n          >\n            &#10005;\n          </div>\n          <button\n            aria-controls={`users${index + 1}_desc`}\n            data-qa=\"users__user-button\"\n            className={`users__user-button ${fontWeightBold}`}\n            onClick={onClick}\n          >\n            {user.name}\n          </button>\n        </dt>\n\n        <dd>\n          {\" \"}\n          <p\n            id={`users${index + 2}_desc`}\n            data-qa=\"users__desc\"\n            className={`users__desc ${showDescription}`}\n          >\n            {/* Show followers count for each user */}\n            Follower Count:\n            {users.filter((usr) => usr.following.includes(user.id)).length}\n          </p>\n          {user.interests\n            ? user.interests.map((int, idx) => (\n                <div key={idx}>\n                  {\" \"}\n                  {interests\n                    .filter((interest) => interest.id === int)\n                    .map((interest) => (\n                      <div className={` users__content`} key={interest.id}>\n                        <p\n                          id={`users${index + 2}_desc`}\n                          data-qa=\"users__desc\"\n                          className={`users__desc ${showDescription}`}\n                        >\n                          {interest.name}\n                        </p>\n                        <div\n                          className={`remove-button  users__desc ${showDescription}`}\n                          id={`users${index + 2}_desc`}\n                          data-qa=\"users__desc\"\n                          onClick={() => clearInterestsFromUser(user.id, int)}\n                        >\n                          &#10005;\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              ))\n            : false}\n        </dd>\n      </div>\n    </>\n  );\n};\n\nexport default AccordionItem;\n","import React, { useState } from \"react\";\nimport AccordionItem from \"./AccordionItem\";\nimport { DataTypes } from \"../providers/users.providers\";\ntype UsersTypes = {\n  usersList: DataTypes;\n};\nconst Accordion: React.FC<UsersTypes> = ({ usersList }) => {\n  const [activeIndex, setActiveIndex] = useState(1);\n  const renderedUsers = usersList.users\n    //sort users by follower count\n    .sort((a, b) => b.following.length - a.following.length)\n    .map((user, index) => {\n      const showDescription = index === activeIndex ? \"show-description\" : \"\";\n      const fontWeightBold = index === activeIndex ? \"font-weight-bold\" : \"\";\n      return (\n        <AccordionItem\n          showDescription={showDescription}\n          fontWeightBold={fontWeightBold}\n          user={user}\n          index={index}\n          onClick={() => {\n            setActiveIndex(index);\n          }}\n          key={user.id}\n        />\n      );\n    });\n\n  return (\n    <div className=\"users\">\n      <h1 className=\"users__title\">USERS</h1>\n      <dl className=\"users__list\">{renderedUsers}</dl>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React, { useContext } from \"react\";\r\nimport Accordion from \"./Accordion\";\r\nimport { UsersContext } from \"../providers/users.providers\";\r\n\r\nconst UserList = () => {\r\n  const users = useContext(UsersContext);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"component\">\r\n        <Accordion usersList={users} />\r\n      </div>\r\n      <div className=\"attribution\">\r\n        Challenge by\r\n        <a href=\"https://www.trufla.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n          Trufla Technologies.\r\n        </a>\r\n        Coded by <a href=\"https://github.com/Mostafa-Ragab\"> Mostafa raslan.</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import UserList from \"./components/UserList\";\n\nfunction App() {\n  return (\n    <div>\n      <UserList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport UsersProvider from \"./providers/users.providers\";\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <UsersProvider>\n    <App />\n  </UsersProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}